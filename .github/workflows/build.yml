name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
            - os: windows-latest
              vcpkg-cmake-file: "$env:VCPKG_INSTALLATION_ROOT\\scripts\\buildsystems\\vcpkg.cmake"
              ctest-target: RUN_TESTS
            - os: ubuntu-latest
              vcpkg-cmake-file: "$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
              ctest-target: test
            - os: macos-latest
              vcpkg-cmake-file: "$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
              ctest-target: test

    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      CMAKE_TEST_DIR: ${{ github.workspace }}/build/test
      CMAKE_GENERATOR: "Ninja"

    steps:
    - uses: actions/checkout@v4

    - name: dependencies (macos)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install llvm ninja
        ln -s "/usr/local/opt/llvm/bin/clang-format" "/usr/local/bin/clang-format"
        ln -s "/usr/local/opt/llvm/bin/clang-tidy" "/usr/local/bin/clang-tidy"

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
            ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed
        key: ${{ runner.os }}-${{ hashFiles( '**/vcpkg.json' ) }}

    - name: Build and run unit tests (with allocator)
      run: |
        cmake -B "${{ env.CMAKE_BUILD_DIR }}" -DCLANG_TIDY=ON -DTESTING=ON -DSANITIZERS=ON -DCMAKE_TOOLCHAIN_FILE="${{ matrix.vcpkg-cmake-file}}" .
        cmake --build "${{ env.CMAKE_BUILD_DIR }}" --config Release
        ctest --test-dir "${{ env.CMAKE_BUILD_DIR }}"

    - name: Clear build artifacts
      run: |
        rm -rf "${{ env.CMAKE_BUILD_DIR }}"

    - name: Build and run unit tests (without allocator)
      run: |
        cmake -B "${{ env.CMAKE_BUILD_DIR }}" -DCLANG_TIDY=ON -DTESTING=ON -DSANITIZERS=ON -DNO_ALLOC=ON -DCMAKE_TOOLCHAIN_FILE="${{ matrix.vcpkg-cmake-file}}" .
        cmake --build "${{ env.CMAKE_BUILD_DIR }}" --config Release
        ctest --test-dir "${{ env.CMAKE_BUILD_DIR }}"


